@using System.Globalization
@using System.Text.Json
@model Domain.Models.RestaurantDetailsViewModel

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MealMate</title>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <style>
        #popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            max-width: 400px;
            width: 80%;
            height: 90%;
            background-color: white;
            padding: 20px;
            border-radius: 30px;
            z-index: 1000;
        }
        .content {
            overflow-y: auto;
        }
        .close-button {
            position: absolute;
            top: 10px;
            right: 20px;
            cursor: pointer;
            font-size: 50px;
            color: #4c4c4c;
            z-index: 1001;
        }
    </style>
</head>
<body>

<div id="overlay" onclick="hidePopup()"></div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        function setCellHeight() {
            const cells = document.querySelectorAll('.cell');
            cells.forEach(cell => {
                const width = cell.offsetWidth;
                const height = 3 * width / 2;
                cell.style.height = `${height}px`;
            });
        }

        setCellHeight();
        window.addEventListener('resize', setCellHeight);
    });
    
</script>
<div id="order-context" data-table-id="@Model.Table.Id" data-restaurant-id="@Model.Restaurant.Id" data-client-id="1"></div>
<div class="container">
    <p class="category name">@Model.Restaurant.Name</p>
    <p class="line"></p>
    @foreach (var category in Model.Restaurant.Menu.Categories)
    {
        <div class="block">
            <div class="category">@category.Name</div>
            <div class="row">
                @foreach (var cell in category.MenuItems)
                {
                    var dataCell = cell.ToString();
                    var doc = JsonDocument.Parse(dataCell);
                    <div class="cell" data-cell='@dataCell' onclick="handleCellClick(event, this)">
                        @if (string.IsNullOrEmpty(cell.ImagePath))
                        {
                            <img src="https://i.ebayimg.com/images/g/lbUAAOSw6DtmH8z0/s-l1600.png" alt="image" class="image">
                        }
                        else
                        {
                            <img src="/MenuItemImages/@cell.ImagePath" alt="image" class="image">
                        }
                        <div class="content">
                            <p class="cost">@cell.Price.ToString(CultureInfo.InvariantCulture)₽</p>
                            <p class="desc">@cell.Name</p>
                            <p class="cooking-time">@cell.CookingTimeMinutes</p>
                            <button class="add-button" data-item-id="@cell.Id" data-count="0">
                                <span class="plus">+</span>
                                <span class="text">Добавить</span>
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    <div class="cart">
        <div class="category">Корзина</div>
        <div class="basket">
            <div id="cart-items"></div>
            <div id="cart-total" class="bg gray">
                <span class="desc">Итого: </span><span class="desc" id="total-price">0</span><span class="desc">₽</span>
            </div>
            <div id="cart-total-time" class="bg gray">
                <span class="desc">Примерное время ожидания: </span><span class="desc" id="total-time">0</span><span class="desc"> минут</span>
            </div>
            <textarea id="input" placeholder="Оставьте комментарий к заказу..."></textarea>
            <div class="call" id="call">
                <span class="callText">
                    <p id="callText">Позвать официанта</p></span>
                <span class="callImage"><img src="/img/call.svg" alt="Позвать официанта"></span>
            </div>
        </div>

    </div>

</div>

<button class="send-button" id="order-button">
    <span class="text">Сделать заказ</span><span class="arrow"><img src="/img/arrow.svg" alt="arrow"></span>
</button>

<div class="resPositionLatitude" id="resPositionLatitude">
    @Model.Restaurant.Coordinates.Latitude
</div>
<div class="resPositionLongitude" id="resPositionLongitude">
    @Model.Restaurant.Coordinates.Longitude
</div>

<div id="popup">
    <img src="#" alt="image" class="image popup-image" id="popup-image">
    <img src="/img/x.svg" alt="x" class="close-button" onclick="hidePopup()">
    <div class="content popup-content">
        <div id="popup-cost" class="cost"></div>
        <div id="popup-desc" class="desc bold"></div>
        <div id="popup-full-desc" class="desc"></div>
        <table>
            <tr>
                <th id="proteins">-</th>
                <th id="fats">-</th>
                <th id="carbohydrates">-</th>
                <th id="kkal">-</th>
            </tr>
            <tr>
                <td>белки</td>
                <td>жиры</td>
                <td>углеводы</td>
                <td>ккал</td>
            </tr>
        </table>
        <div id="popup-ctm" class="desc"></div>
    </div>
    <button class="add-button popup-button" onclick="handlePopupAddButtonClick()">
        <span class="plus">+</span>
        <span class="text">Добавить</span>
    </button>
</div>

<button id="scrollToBottomBtn" title="Корзина">
    <img src="/img/basket.svg" alt="to-basket">
</button>
<script>
        // Получаем элемент кнопки
        const scrollToBottomBtn = document.getElementById('scrollToBottomBtn');

        // Функция, которая проверяет, находимся ли мы внизу страницы
        function checkScrollPosition() {
            // Высота видимой части страницы
            const scrollTop = window.scrollY || document.documentElement.scrollTop;
            // Общая высота страницы
            const scrollHeight = document.documentElement.scrollHeight;
            // Высота окна просмотра
            const clientHeight = document.documentElement.clientHeight;

            // Если мы внизу страницы
            if (scrollTop + clientHeight >= scrollHeight - 200) {
                scrollToBottomBtn.style.display = 'none'; // Скрываем кнопку
            } else {
                scrollToBottomBtn.style.display = 'block'; // Показываем кнопку
            }
        }

        // Добавляем обработчик события скролла
        window.addEventListener('scroll', checkScrollPosition);

        // Вызываем функцию при загрузке страницы, чтобы установить начальное состояние
        checkScrollPosition();
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>


<script src="/js/order.js"></script>

</body>
</html>
